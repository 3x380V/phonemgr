dnl Process this file with autoconf to produce a configure script.
AC_PREREQ(2.52)

AC_INIT([GNOME Phone Manager],[0.51],[http://bugzilla.gnome.org/enter_bug.cgi?product=gnome-phone-manager],[gnome-phone-manager])
AC_CONFIG_SRCDIR(src/main.c)

AM_MAINTAINER_MODE
AM_CONFIG_HEADER(config.h)

AM_INIT_AUTOMAKE([1.9 dist-bzip2 no-dist-gzip check-news])

dnl Initialize libtool
AM_DISABLE_SHARED
AM_PROG_LIBTOOL

GNOKII_REQS="gnokii >= 0.6.24 bluez >= 3.12"
GNOME_BLUETOOTH_REQS="gnome-bluetooth > 0.8.0"

AC_PROG_CC
AC_PROG_INSTALL
AC_ISC_POSIX
dnl Check for the "check" unit test framework
dnl AC_CHECK_LIB(check,suite_create)

# ****
# i18n
# ****

IT_PROG_INTLTOOL([0.35.0])

GETTEXT_PACKAGE=gnome-phone-manager
AC_SUBST([GETTEXT_PACKAGE])
AC_DEFINE_UNQUOTED([GETTEXT_PACKAGE],["gnome-phone-manager"],[GNOME phone manager applet gettext domain])
AM_GLIB_GNU_GETTEXT

# ****

AC_PATH_PROG(GCONFTOOL, gconftool-2)
AM_GCONF_SOURCE_2

PKG_CHECK_MODULES(LIBGSM, glib-2.0 gobject-2.0 $GNOKII_REQS gthread-2.0 bluez)
AC_SUBST(LIBGSM_CFLAGS)
AC_SUBST(LIBGSM_LIBS)

dnl Evolution address book
PKG_CHECK_MODULES(TMP_EVO, libebook-1.2,
		evo_pc_file="libebook-1.2",
		evo_pc_file="libebook-1.0")

PKG_CHECK_MODULES(PHONEMGR, gtk+-2.0 >= 2.10 glib-2.0
	gstreamer-0.10 gdk-pixbuf-2.0 gconf-2.0
	$GNOME_BLUETOOTH_REQS libglade-2.0 $evo_pc_file
	gmodule-2.0 dbus-glib-1 gnome-icon-theme >= 2.19.1
	gtkspell-2.0
)

DBUSLIBDIR="`$PKG_CONFIG dbus-glib-1 --variable=libdir`"
DBUSBINDIR="`echo $DBUSLIBDIR | sed -e s/lib/bin/`"
AC_PATH_PROG([DBUS_BIND], [dbus-binding-tool], [no], [$DBUSBINDIR:$PATH])
if test "x$DBUS_BIND" = "xno"; then
	AC_MSG_WARN([dbus-binding-tool not found])
fi

saved_CPPFLAGS="$CPPFLAGS"
CPPFLAGS="$CPPFLAGS $TMP_EVO_CFLAGS"
AC_CHECK_TYPES([EContactPhotoType], , , [#include <libebook/e-contact.h>])
CPPFLAGS="$saved_CPPFLAGS"

AC_SUBST(PHONEMGR_CFLAGS)
AC_SUBST(PHONEMGR_LIBS)

dnl Check for telepathy property page build
AC_ARG_ENABLE(telepathy,
	AC_HELP_STRING([--enable-telepathy],[compile the telepathy SMS plugin]),
	[case "${enableval}" in
	yes) ENABLE_TELEPATHY=yes ;;
	no) ENABLE_TELEPATHY=no ;;
	*) AC_MSG_ERROR(bad value ${enableval} for --enable-telepathy) ;;
	esac],
	[ENABLE_TELEPATHY=yes]) dnl Default value

if test x$ENABLE_TELEPATHY = "xyes" ; then
	PKG_CHECK_MODULES(TELEPATHY, telepathy-glib,
			[HAVE_TELEPATHY=yes], [HAVE_TELEPATHY=no])
fi
if test x$HAVE_TELEPATHY = "xyes"; then
	AC_DEFINE(HAVE_TELEPATHY, 1, [defined if you build the telepathy SMS plugin])
fi
AM_CONDITIONAL(HAVE_TELEPATHY, test x$HAVE_TELEPATHY = "xyes")

AC_PATH_PROG(GLIB_GENMARSHAL, glib-genmarshal, no)
AC_SUBST(GLIB_GENMARSHAL)

AC_PATH_PROG(GCONFTOOL, gconftool-2, no)

if test x"$GCONFTOOL" = xno; then
  AC_MSG_ERROR([gconftool-2 executable not found in your path - should be installed with GConf])
fi

dnl ================================================================
dnl set up data dir
if test "x${datadir}" = 'x${prefix}/share'; then
  if test "x${prefix}" = "xNONE"; then
    AC_DEFINE_UNQUOTED(PHONEMGR_DATA_DIR, "${ac_default_prefix}/share/${PACKAGE}", [data dir])
  else
    AC_DEFINE_UNQUOTED(PHONEMGR_DATA_DIR, "${prefix}/share/${PACKAGE}", [data dir])
  fi
else
  AC_DEFINE_UNQUOTED(PHONEMGR_DATA_DIR, "${datadir}/${PACKAGE}", [data dir])
fi


dnl ==========================================================================
dnl Turn on the additional warnings last, so -Werror doesn't affect other tests.
AC_ARG_ENABLE(more-warnings,
[  --enable-more-warnings  Maximum compiler warnings],
set_more_warnings="$enableval",[
if test -f $srcdir/CVS/Entries; then
    is_cvs_version=true
    set_more_warnings=yes
else
    set_more_warnings=no
fi
])
AC_MSG_CHECKING(for more warnings, including -Werror)
if test "$GCC" = "yes" -a "$set_more_warnings" != "no"; then
    AC_MSG_RESULT(yes)
    CXXFLAGS="\
    -Wall \
    -Wchar-subscripts -Wmissing-declarations -Wmissing-prototypes \
    -Wnested-externs -Wpointer-arith \
    -Wcast-align -Wsign-compare \
    $CXXFLAGS"

    for option in -Wsign-promo -Wno-sign-compare -Wmissing-noreturn; do
        SAVE_CFLAGS="$CXXFLAGS"
        CFLAGS="$option $CXXFLAGS"
        AC_MSG_CHECKING([whether gcc understands $option])
        AC_TRY_COMPILE([], [],
            has_option=yes,
            has_option=no,)
        if test $has_option = no; then
            CXXFLAGS="$SAVE_CXXFLAGS"
        fi
        AC_MSG_RESULT($has_option)
        unset has_option
        unset SAVE_CXXFLAGS
    done
    unset option
else
    AC_MSG_RESULT(no)
fi

AC_CONFIG_FILES([
Makefile
data/Makefile
data/icons/Makefile
data/icons/16x16/status/Makefile
data/icons/16x16/Makefile
data/icons/22x22/status/Makefile
data/icons/22x22/Makefile
data/icons/24x24/status/Makefile
data/icons/24x24/Makefile
libgsm/Makefile
src/Makefile
telepathy/Makefile
po/Makefile.in
])

AC_OUTPUT

